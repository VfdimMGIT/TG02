import os
import random
import asyncio
from pathlib import Path
from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, FSInputFile
from config import Config
from weather import get_weather
from gtts import gTTS
from googletrans import Translator

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
Path("img").mkdir(exist_ok=True)

bot = Bot(token=Config.BOT_TOKEN)
dp = Dispatcher()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫
translator = Translator()

# –ü—Ä–∏–º–µ—Ä—ã –∫–∞—Ä—Ç–∏–Ω–æ–∫ (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Å–≤–æ–∏)
PHOTOS = [
    "https://i01.fotocdn.net/s210/13eda5a3c26f54fe/public_pin_l/2669638036.jpg",
    "https://i.pinimg.com/736x/17/88/c6/1788c60267d9e48aff7c266c094f4b0e.jpg",
    "https://live.staticflickr.com/65535/49525034187_241f48d579_b.jpg"
]


# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(CommandStart())
async def start(message: Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –Ø —É–º–Ω—ã–π –±–æ—Ç —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º —Ñ—É–Ω–∫—Ü–∏–π!\n–ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥")


# –ö–æ–º–∞–Ω–¥–∞ /help
@dp.message(Command("help"))
async def help_cmd(message: Message):
    help_text = (
        "üìù –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã\n"
        "/help - –ü–æ–º–æ—â—å\n"
        "/weather - –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã\n"
        "/photo - –°–ª—É—á–∞–π–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞\n"
        "/voice - –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n"
        "üí° –¢–∞–∫–∂–µ —è –º–æ–≥—É:\n"
        "- –°–æ—Ö—Ä–∞–Ω—è—Ç—å –≤—Å–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –≤–∞–º–∏ —Ñ–æ—Ç–æ\n"
        "- –ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å –ª—é–±–æ–π —Ç–µ–∫—Å—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π\n"
        "- –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø—Ä–æ –ò–ò"
    )
    await message.answer(help_text)


# –ö–æ–º–∞–Ω–¥–∞ /weather
@dp.message(Command("weather"))
async def weather(message: Message):
    weather_report = await get_weather()
    await message.answer(weather_report)


# –ö–æ–º–∞–Ω–¥–∞ /photo
@dp.message(Command("photo"))
async def send_photo(message: Message):
    photo_url = random.choice(PHOTOS)
    await message.answer_photo(photo=photo_url, caption="üéâ –í–æ—Ç —Å–ª—É—á–∞–π–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞!")


# –ö–æ–º–∞–Ω–¥–∞ /voice
@dp.message(Command("voice"))
async def send_voice(message: Message):
    text = "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –≤–∞—à–µ–≥–æ –±–æ—Ç–∞. –Ø –º–æ–≥—É —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Ñ–æ—Ç–æ, –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–≥–æ–¥—É –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Ç–µ–∫—Å—Ç!"

    try:
        tts = gTTS(text=text, lang='ru')
        voice_path = "voice_message.mp3"
        tts.save(voice_path)

        voice = FSInputFile(voice_path)
        await message.answer_voice(voice=voice)
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {str(e)}")
    finally:
        if os.path.exists(voice_path):
            os.remove(voice_path)


# –†–µ–∞–∫—Ü–∏—è –Ω–∞ —Ñ–æ—Ç–æ + —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
@dp.message(F.photo)
async def save_photo(message: Message):
    try:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ
        photo = message.photo[-1]
        file_id = photo.file_id
        file = await bot.get_file(file_id)
        file_path = file.file_path

        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        save_path = f"img/{file_id}.jpg"
        await bot.download_file(file_path, save_path)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
        responses = [
            "üì∏ –§–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!",
            "üñº –°–æ—Ö—Ä–∞–Ω–∏–ª —Ç–≤–æ—é —Ñ–æ—Ç–∫—É!",
            "üíæ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –º–æ—é –∫–æ–ª–ª–µ–∫—Ü–∏—é"
        ]
        await message.answer(random.choice(responses))
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–æ—Ç–æ: {str(e)}")


# –û—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –ø—Ä–æ –ò–ò
@dp.message(F.text.lower() == "—á—Ç–æ —Ç–∞–∫–æ–µ –∏–∏?")
async def ai_definition(message: Message):
    definition = (
        "ü§ñ –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç (–ò–ò) ‚Äî —ç—Ç–æ –æ–±–ª–∞—Å—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö –Ω–∞—É–∫, "
        "—Å–æ–∑–¥–∞—é—â–∞—è —Å–∏—Å—Ç–µ–º—ã, —Å–ø–æ—Å–æ–±–Ω—ã–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–¥–∞—á–∏, —Ç—Ä–µ–±—É—é—â–∏–µ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞: "
        "–æ–±—É—á–µ–Ω–∏–µ, —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤, –ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π –∏ —Ç.–¥."
    )
    await message.answer(definition)


# –ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞
@dp.message(F.text)
async def translate_text(message: Message):
    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
    if message.text.startswith('/'):
        return

    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≤–æ–ø—Ä–æ—Å –ø—Ä–æ –ò–ò
    if message.text.lower() == "—á—Ç–æ —Ç–∞–∫–æ–µ –∏–∏?":
        return

    try:
        # –ü–µ—Ä–µ–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç
        translation = translator.translate(message.text, dest='en')
        await message.answer(f"üá¨üáß –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π:\n{translation.text}")
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞: {str(e)}")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
